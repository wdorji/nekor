/// <reference types="node" />
import type { ReporterOnStartOptions } from '@jest/reporters';
import type { AggregatedResult } from '@jest/test-result';
import type { Config } from '@jest/types';
import { Options, RuntimeOptions } from './options';
export declare class AudioReporter {
    globalConfig: Config.GlobalConfig;
    log: {
        enabled: boolean;
        writer: Console;
        debug(...args: any[]): void;
    };
    player: any;
    disable: boolean;
    options: RuntimeOptions;
    volume: number | undefined;
    onStartVolume: number;
    onCompleteVolume: number | undefined;
    constructor(globalConfig: Config.GlobalConfig, jestOptions: Partial<Options>);
    onRunStart(results: AggregatedResult, options: ReporterOnStartOptions): void;
    onRunComplete(_contexts: any, results: AggregatedResult): Promise<unknown> | undefined;
    private playComplete;
    private getEffectiveOnStartVolume;
    private getEffectiveOnCompleteVolume;
    private getPlayOption;
}
